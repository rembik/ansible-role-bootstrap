---
# tasks file for bootstrap
- name: Wait for host
  wait_for:
    port: "{{ ansible_port | default('22') }}"
    host: "{{ (ansible_ssh_host | default(ansible_host) | default(inventory_hostname)) }}"
  connection: local
  become: no
  when:
    - ansible_connection is defined
    - ansible_connection not in ["docker", "container"]
    - bootstrap_wait_for_host | bool

- name: Prepare system
  block:
    - name: Test connection
      wait_for_connection:
        timeout: "{{ bootstrap_timeout }}"
      changed_when: no

    - name: Gather ansible facts
      setup:

    - name: Install bootstrap packages
      package:
        name: "{{ item }}"
        state: present
      loop: "{{ bootstrap_facts_packages.split() }}"
  rescue:
    - name: Set bootstrap ansible_user
      set_fact:
        bootstrap_ansible_user: "{{ bootstrap_user }}"
      changed_when: no

    - name: Gather bootstrap facts
      include_tasks: "gather_facts.yml"

    - name: Install bootstrap packages (raw)
      raw: "{{ bootstrap_install.raw }}"
      register: bootstrap_install_packages
      changed_when:
        - (bootstrap_install.stdout_regex in bootstrap_install_packages.stdout and
          bootstrap_os_family in ["Alpine", "Archlinux", "Gentoo"]) or
          (bootstrap_install.stdout_regex not in bootstrap_install_packages.stdout and
          bootstrap_os_family in ["Debian", "RedHat", "Suse"])
      vars:
        ansible_user: "{{ bootstrap_ansible_user }}"

    - name: Gather ansible facts
      setup:
      vars:
        ansible_user: "{{ bootstrap_ansible_user }}"

    - name: Show gathered facts
      debug:
        msg: |
          Bootstrap facts:
          - {{ bootstrap_distribution | default('NA') }}
          - {{ bootstrap_distribution_major_version | default('NA') }}
          - {{ bootstrap_os_family | default('NA') }}
          Ansible facts:
          - {{ ansible_distribution | default('NA') }}
          - {{ ansible_distribution_major_version | default('NA') }}
          - {{ ansible_os_family | default('NA') }}
      vars:
        ansible_user: "{{ bootstrap_ansible_user }}"

    - name: Install bootstrap packages
      package:
        name: "{{ item }}"
        state: present
      loop: "{{ bootstrap_facts_packages.split() }}"
      vars:
        ansible_user: "{{ bootstrap_ansible_user }}"
