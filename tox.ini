[tox]
minversion = 3.7
envlist = docker-ansible{previous,latest,devel}-py{39},ec2-ansible{latest}-py{39}
skipsdist = true

[gh-actions]
python =
    3.9: py39

[gh-actions:env]
ANSIBLE =
    previous: ansible{previous}
    latest: ansible{latest}
    devel: ansible{devel}
    stable: ansible{previous,latest}
    preview: ansible{latest,devel}
    all: ansible{previous,latest,devel}

[travis:env]
ANSIBLE =
    previous: ansible{previous}
    latest: ansible{latest}
    devel: ansible{devel}
    stable: ansible{previous,latest}
    preview: ansible{latest,devel}
    all: ansible{previous,latest,devel}

[testenv]
passenv = *
whitelist_externals = /bin/bash
deps =
    ansibleprevious: ansible>=2.9,<2.10
    ansiblelatest: ansible>=2.10,<2.11
    ansibledevel: git+https://github.com/ansible/ansible.git@devel
    molecule
    yamllint
    ansible-lint
    docker: docker
    docker: molecule-docker
    ec2: boto
    ec2: boto3
    ec2: awscli
    ec2: molecule-ec2
commands =
    # Test local on Docker
    docker: molecule test
    # Test remote on Amazon EC2
    ec2: /bin/bash -c \
    ec2: 'if [ "{env:TRAVIS:false}" = "true" ] && [ "{env:TRAVIS_PULL_REQUEST:false}" = "false" ] && \
    ec2: [ "{env:AWS_ACCESS_KEY:no}" != "no" ] && [ "{env:TEST_EC2_AMI:no}" != "no" ]; then \
    ec2: molecule test --scenario-name ec2 ; fi'
    # Test remote on Amazon EC2
    ec2: /bin/bash -c \
    ec2: 'if [ "{env:TRAVIS:false}" = "false" ] && [ "{env:AWS_REGION:no}" != "no" ]; then \
    ec2: molecule test --scenario-name ec2 ; fi'
setenv =
    TOX_ENVNAME={envname}
    MOLECULE_EPHEMERAL_DIRECTORY=/tmp/molecule/ansible-role-kickstart-iso/tox/{env:TEST_INSTANCE_PREFIX:instance}_{env:TEST_DISTRO:centos_latest}_{envname}
