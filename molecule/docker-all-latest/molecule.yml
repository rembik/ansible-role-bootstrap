---
dependency:
  name: galaxy
driver:
  name: docker
lint: |
  set -e
  yamllint .
  ansible-lint
platforms:
  # https://hub.docker.com/search/?type=image
  - name: instance_amazonlinux_latest_docker
    image: amazonlinux:latest
    pre_build_image: yes
    groups:
      - amazonlinux_latest_docker
  - name: instance_alpine_latest_docker
    image: alpine:latest
    pre_build_image: yes
    command: "sh -c 'sleep infinity & wait'"
    groups:
      - alpine_latest_docker
  - name: instance_archlinux_latest_docker
    image: archlinux/base:latest
    pre_build_image: yes
    groups:
      - opensuse_archlinux_docker
  - name: instance_centos_latest_docker
    image: centos:latest
    pre_build_image: yes
    groups:
      - centos_latest_docker
  - name: instance_debian_latest_docker
    image: debian:latest
    pre_build_image: yes
    groups:
      - debian_latest_docker
  - name: instance_fedora_latest_docker
    image: fedora:latest
    pre_build_image: yes
    groups:
      - fedora_latest_docker
  - name: instance_gentoo_latest_docker
    image: gentoo/stage3-amd64:latest
    pre_build_image: yes
    groups:
      - gentoo_latest_docker
  - name: instance_kali_latest_docker
    image: kalilinux/kali-linux-docker:latest
    pre_build_image: yes
    groups:
      - kali_latest_docker
  - name: instance_opensuse_leap_docker
    image: opensuse/leap:latest
    pre_build_image: yes
    groups:
      - opensuse_leap_docker
  - name: instance_opensuse_tumbleweed_docker
    image: opensuse/tumbleweed:latest
    pre_build_image: yes
    groups:
      - opensuse_tumbleweed_docker
  - name: instance_redhat_latest_docker
    image: registry.access.redhat.com/ubi8/ubi:latest
    pre_build_image: yes
    groups:
      - redhat_latest_docker
  - name: instance_ubuntu_latest_docker
    image: ubuntu:latest
    pre_build_image: yes
    groups:
      - ubuntu_latest_docker
provisioner:
  name: ansible
  config_options:
    defaults:
      interpreter_python: auto_silent
      callback_whitelist: profile_tasks, timer, yaml
      stdout_callback: yaml
  playbooks:
    converge: ${TEST_CONVERGE:-../resources/converge.yml}
    verify: ${TEST_VERIFY:-../resources/verify.yml}
scenario:
  name: docker-all-latest
verifier:
  name: ansible
